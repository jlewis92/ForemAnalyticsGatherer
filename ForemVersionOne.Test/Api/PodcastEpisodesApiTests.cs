/*
 * Forem API V1
 *
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ForemVersionOne.Client;
using ForemVersionOne.Api;
// uncomment below to import models
//using ForemVersionOne.Model;

namespace ForemVersionOne.Test.Api
{
    /// <summary>
    ///  Class for testing PodcastEpisodesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PodcastEpisodesApiTests : IDisposable
    {
        private PodcastEpisodesApi instance;

        public PodcastEpisodesApiTests()
        {
            instance = new PodcastEpisodesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PodcastEpisodesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PodcastEpisodesApi
            //Assert.IsType<PodcastEpisodesApi>(instance);
        }

        /// <summary>
        /// Test GetPodcastEpisodes
        /// </summary>
        [Fact]
        public void GetPodcastEpisodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string? username = null;
            //var response = instance.GetPodcastEpisodes(page, perPage, username);
            //Assert.IsType<List<PodcastEpisodeIndex>>(response);
        }
    }
}
